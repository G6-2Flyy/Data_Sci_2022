Sub bell_stockList()    ' Set an initial variable listing the stock item    Dim stockName As String      ' Set an initial variable for holding the total stock volume    Dim total_Volume As Double    total_Volume = 0      ' Keep track of the location for each stock item in the summary table    Dim summary_table_row As Integer    summary_table_row = 2      Dim openingPrice As Double    openingPrice = Cells(2, 3).Value  ' the opening price of the first stock      Dim closingPrice As Double    closingPrice = 0      Dim yearlyChange As Double    yearlyChange = 0      Dim percentChange As Double    percentChange = 0      Dim maxpercentChange As Double    maxpercentChange = 0      Dim maxpercentTicker As String      Dim minpercentChange As Double    minpercentChange = 1E+20        Dim totalVolume As Double        Dim greatestTotalVolume As Double    greatestTotalVolume = 0        Dim greatestTotalVolumeTicker As String        ' Second summarty table of stock data    RowCount = Cells(Rows.Count, "A").End(xlUp).Row    Cells(1, 9).Value = "Ticker"    Cells(1, 10).Value = "Yearly Change"    Cells(1, 11).Value = "Percent Change"    Cells(1, 12).Value = "Total Stock Volume"        ' Loop through all stock items    For i = 2 To RowCount            ' Check if we are still within the same stock, if we are not...            If Cells(i + 1, 1).Value <> Cells(i, 1).Value Then                ' Message Box the unique stock name            ' MsgBox (Cells(i, 1).Value)                      ' Set the Stock name to the next stock item            stockName = Cells(i, 1).Value                      ' Add to the stock volume            total_Volume = total_Volume + Cells(i, 7).Value                      ' get the closing price of stock            closingPrice = (Cells(i, 6).Value)                      ' yearly change            yearlyChange = closingPrice - openingPrice                      ' pecent change            percentChange = (closingPrice - openingPrice) / openingPrice                    ' MsgBox (percentChange)                      ' write out to summary table            Cells(summary_table_row, 9).Value = stockName            Cells(summary_table_row, 10).Value = yearlyChange            Cells(summary_table_row, 10).NumberFormat = "0.00"            Cells(summary_table_row, 11).Value = percentChange            Cells(summary_table_row, 11).NumberFormat = "0.00%"            Cells(summary_table_row, 12).Value = total_Volume                       ' execute conditional formatting to yearly change                                If (Cells(summary_table_row, 10).Value > 0) Then                Cells(summary_table_row, 10).Interior.ColorIndex = 4                Else                Cells(summary_table_row, 10).Interior.ColorIndex = 3                End If                              ' resets              summary_table_row = summary_table_row + 1              total_Volume = 0                            openingPrice = (Cells(i + 1, 3).Value)                        Else              ' Add to the stock volume              total_Volume = total_Volume + Cells(i, 7).Value            End If                Next i     Cells(1, 16).Value = "Ticker"     Cells(1, 17).Value = "Value"            For j = 2 To Cells(Rows.Count, 9).End(xlUp).Row                         If (Cells(j, 11).Value > maxpercentChange) Then                     maxpercentChange = Cells(j, 11).Value                     maxpercentTicker = Cells(j, 9).Value                  End If                           If (Cells(j, 11).Value < minpercentChange) Then                       minpercentChange = Cells(j, 11).Value                       minpercentTicker = Cells(j, 9).Value                  End If                                 If (Cells(j, 12).Value > greatestTotalVolume) Then                       greatestTotalVolume = Cells(j, 12).Value                       greatestTotalVolumeTicker = Cells(j, 9).Value                   End If                        Next j                Cells(2, 17).Value = FormatPercent(Round(minpercentChange, 4))        Cells(2, 16).Value = minpercentTicker        Cells(3, 17).Value = FormatPercent(Round(maxpercentChange, 4))        Cells(3, 16).Value = maxpercentTicker        Cells(4, 16).Value = greatestTotalVolumeTicker        Cells(4, 17).Value = greatestTotalVolume        Cells(4, 17).NumberFormat = “0”        Cells(2, 15).Value = "Greatest % Decrease"        Cells(3, 15).Value = "Greatest % Increase"        Cells(4, 15).Value = "Greatest Total Volume"End Sub   Sub runMultiSheet()           Dim xSh As Worksheet                Application.ScreenUpdating = False                    For Each xSh In Worksheets                xSh.Select            Call bell_stockList            Next                    Application.ScreenUpdating = True        End SubSub AutofitColumns()            Dim Wsht As Worksheet                    For Each Wsht In Worksheets                 With Wsht.EntireColumn.AutoFit            End With            Next Wsht    End Sub